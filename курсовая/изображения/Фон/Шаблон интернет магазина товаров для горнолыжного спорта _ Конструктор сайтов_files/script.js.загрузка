$(function(){

	window.customConfirm = function(q, a){
		if(prompt(q)==a){
			return true;
		}
		return false;
	}

	window.modal = {
		getModal: function(title = 'Заголовок',  descr='Описание', css_class = ''){
			var modal_template = `
				<div class="modal_bg">
					<div class="modal_body  ${css_class}">
						<div class="modal_close"><i class="fa fa-times" aria-hidden="true"></i></div>
						<div class="modal_inner">
							<div class="modal_title">${title}</div>
							<div class="modal_descr">${descr}</div>
						</div>
					</div>
				</div>
			`;

			$('body').append(modal_template);
			$('body').addClass('modal');

		},
		init: function(){
			$('body').on('click', '.modal_close', function(){
				$(this).parent().parent().remove();
				$('body').removeClass('modal')
			})
			$('body').on('click', '.modal_body', function(e){
				e.stopPropagation();
			})
			$('body').on('click', '.modal_bg', function(e){
				$(this).find('.modal_close').click();
			})


		}

	};
	window.modal.init();

	var url  = {
		getParam: function (name, url) {
			if (!url) url = window.location.href;
				name = name.replace(/[\[\]]/g, '\\$&');
			var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
				results = regex.exec(url);
			if (!results) return null;
			if (!results[2]) return '';
			return decodeURIComponent(results[2].replace(/\+/g, ' '));
		}
	};
	var cookie = {
			set: function(name,value,days) {
				var expires = "";
				if (days) {
					var date = new Date();
					date.setTime(date.getTime() + (days*24*60*60*1000));
					expires = "; expires=" + date.toUTCString();
				}
				document.cookie = name + "=" + (value || "")  + expires + "; path=/";
			},
			get: function (name) {
				var nameEQ = name + "=";
				var ca = document.cookie.split(';');
				for(var i=0;i < ca.length;i++) {
					var c = ca[i];
					while (c.charAt(0)==' ') c = c.substring(1,c.length);
					if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
				}
				return null;
			},
			remove: function (name) {
				document.cookie = name+'=; Max-Age=-99999999;';
			}

	}


	if(cookie.get('tobiz_first_referrer')===null){
		cookie.set('tobiz_first_referrer', document.referrer);
	}




	window.morph = function ($n, $f1, $f2, $f5) {
		$n = Math.abs(parseInt($n)) % 100;
		if ($n > 10 && $n < 20)
			return $f5;
		$n = $n % 10;
		if ($n > 1 && $n < 5)
			return $f2;
		if ($n == 1)
			return $f1;
		return $f5;
	}



	window.md5 = function (str) {
		var RotateLeft = function (lValue, iShiftBits) {
			return (lValue << iShiftBits) | (lValue >>> (32 - iShiftBits));
		};

		var AddUnsigned = function (lX, lY) {
			var lX4, lY4, lX8, lY8, lResult;
			lX8 = (lX & 0x80000000);
			lY8 = (lY & 0x80000000);
			lX4 = (lX & 0x40000000);
			lY4 = (lY & 0x40000000);
			lResult = (lX & 0x3FFFFFFF) + (lY & 0x3FFFFFFF);
			if (lX4 & lY4) {
				return (lResult ^ 0x80000000 ^ lX8 ^ lY8);
			}
			if (lX4 | lY4) {
				if (lResult & 0x40000000) {
					return (lResult ^ 0xC0000000 ^ lX8 ^ lY8);
				} else {
					return (lResult ^ 0x40000000 ^ lX8 ^ lY8);
				}
			} else {
				return (lResult ^ lX8 ^ lY8);
			}
		};

		var F = function (x, y, z) {
			return (x & y) | ((~x) & z);
		};
		var G = function (x, y, z) {
			return (x & z) | (y & (~z));
		};
		var H = function (x, y, z) {
			return (x ^ y ^ z);
		};
		var I = function (x, y, z) {
			return (y ^ (x | (~z)));
		};

		var FF = function (a, b, c, d, x, s, ac) {
			a = AddUnsigned(a, AddUnsigned(AddUnsigned(F(b, c, d), x), ac));
			return AddUnsigned(RotateLeft(a, s), b);
		};

		var GG = function (a, b, c, d, x, s, ac) {
			a = AddUnsigned(a, AddUnsigned(AddUnsigned(G(b, c, d), x), ac));
			return AddUnsigned(RotateLeft(a, s), b);
		};

		var HH = function (a, b, c, d, x, s, ac) {
			a = AddUnsigned(a, AddUnsigned(AddUnsigned(H(b, c, d), x), ac));
			return AddUnsigned(RotateLeft(a, s), b);
		};

		var II = function (a, b, c, d, x, s, ac) {
			a = AddUnsigned(a, AddUnsigned(AddUnsigned(I(b, c, d), x), ac));
			return AddUnsigned(RotateLeft(a, s), b);
		};

		var ConvertToWordArray = function (str) {
			var lWordCount;
			var lMessageLength = str.length;
			var lNumberOfWords_temp1 = lMessageLength + 8;
			var lNumberOfWords_temp2 = (lNumberOfWords_temp1 - (lNumberOfWords_temp1 % 64)) / 64;
			var lNumberOfWords = (lNumberOfWords_temp2 + 1) * 16;
			var lWordArray = Array(lNumberOfWords - 1);
			var lBytePosition = 0;
			var lByteCount = 0;
			while (lByteCount < lMessageLength) {
				lWordCount = (lByteCount - (lByteCount % 4)) / 4;
				lBytePosition = (lByteCount % 4) * 8;
				lWordArray[lWordCount] = (lWordArray[lWordCount] | (str.charCodeAt(lByteCount) << lBytePosition));
				lByteCount++;
			}
			lWordCount = (lByteCount - (lByteCount % 4)) / 4;
			lBytePosition = (lByteCount % 4) * 8;
			lWordArray[lWordCount] = lWordArray[lWordCount] | (0x80 << lBytePosition);
			lWordArray[lNumberOfWords - 2] = lMessageLength << 3;
			lWordArray[lNumberOfWords - 1] = lMessageLength >>> 29;
			return lWordArray;
		};

		var WordToHex = function (lValue) {
			var WordToHexValue = "", WordToHexValue_temp = "", lByte, lCount;
			for (lCount = 0; lCount <= 3; lCount++) {
				lByte = (lValue >>> (lCount * 8)) & 255;
				WordToHexValue_temp = "0" + lByte.toString(16);
				WordToHexValue = WordToHexValue + WordToHexValue_temp.substr(WordToHexValue_temp.length - 2, 2);
			}
			return WordToHexValue;
		};

		var x = Array();
		var k, AA, BB, CC, DD, a, b, c, d;
		var S11 = 7, S12 = 12, S13 = 17, S14 = 22;
		var S21 = 5, S22 = 9, S23 = 14, S24 = 20;
		var S31 = 4, S32 = 11, S33 = 16, S34 = 23;
		var S41 = 6, S42 = 10, S43 = 15, S44 = 21;

		str = window.utf8_encode(str);
		x = ConvertToWordArray(str);
		a = 0x67452301;
		b = 0xEFCDAB89;
		c = 0x98BADCFE;
		d = 0x10325476;

		for (k = 0; k < x.length; k += 16) {
			AA = a;
			BB = b;
			CC = c;
			DD = d;
			a = FF(a, b, c, d, x[k + 0], S11, 0xD76AA478);
			d = FF(d, a, b, c, x[k + 1], S12, 0xE8C7B756);
			c = FF(c, d, a, b, x[k + 2], S13, 0x242070DB);
			b = FF(b, c, d, a, x[k + 3], S14, 0xC1BDCEEE);
			a = FF(a, b, c, d, x[k + 4], S11, 0xF57C0FAF);
			d = FF(d, a, b, c, x[k + 5], S12, 0x4787C62A);
			c = FF(c, d, a, b, x[k + 6], S13, 0xA8304613);
			b = FF(b, c, d, a, x[k + 7], S14, 0xFD469501);
			a = FF(a, b, c, d, x[k + 8], S11, 0x698098D8);
			d = FF(d, a, b, c, x[k + 9], S12, 0x8B44F7AF);
			c = FF(c, d, a, b, x[k + 10], S13, 0xFFFF5BB1);
			b = FF(b, c, d, a, x[k + 11], S14, 0x895CD7BE);
			a = FF(a, b, c, d, x[k + 12], S11, 0x6B901122);
			d = FF(d, a, b, c, x[k + 13], S12, 0xFD987193);
			c = FF(c, d, a, b, x[k + 14], S13, 0xA679438E);
			b = FF(b, c, d, a, x[k + 15], S14, 0x49B40821);
			a = GG(a, b, c, d, x[k + 1], S21, 0xF61E2562);
			d = GG(d, a, b, c, x[k + 6], S22, 0xC040B340);
			c = GG(c, d, a, b, x[k + 11], S23, 0x265E5A51);
			b = GG(b, c, d, a, x[k + 0], S24, 0xE9B6C7AA);
			a = GG(a, b, c, d, x[k + 5], S21, 0xD62F105D);
			d = GG(d, a, b, c, x[k + 10], S22, 0x2441453);
			c = GG(c, d, a, b, x[k + 15], S23, 0xD8A1E681);
			b = GG(b, c, d, a, x[k + 4], S24, 0xE7D3FBC8);
			a = GG(a, b, c, d, x[k + 9], S21, 0x21E1CDE6);
			d = GG(d, a, b, c, x[k + 14], S22, 0xC33707D6);
			c = GG(c, d, a, b, x[k + 3], S23, 0xF4D50D87);
			b = GG(b, c, d, a, x[k + 8], S24, 0x455A14ED);
			a = GG(a, b, c, d, x[k + 13], S21, 0xA9E3E905);
			d = GG(d, a, b, c, x[k + 2], S22, 0xFCEFA3F8);
			c = GG(c, d, a, b, x[k + 7], S23, 0x676F02D9);
			b = GG(b, c, d, a, x[k + 12], S24, 0x8D2A4C8A);
			a = HH(a, b, c, d, x[k + 5], S31, 0xFFFA3942);
			d = HH(d, a, b, c, x[k + 8], S32, 0x8771F681);
			c = HH(c, d, a, b, x[k + 11], S33, 0x6D9D6122);
			b = HH(b, c, d, a, x[k + 14], S34, 0xFDE5380C);
			a = HH(a, b, c, d, x[k + 1], S31, 0xA4BEEA44);
			d = HH(d, a, b, c, x[k + 4], S32, 0x4BDECFA9);
			c = HH(c, d, a, b, x[k + 7], S33, 0xF6BB4B60);
			b = HH(b, c, d, a, x[k + 10], S34, 0xBEBFBC70);
			a = HH(a, b, c, d, x[k + 13], S31, 0x289B7EC6);
			d = HH(d, a, b, c, x[k + 0], S32, 0xEAA127FA);
			c = HH(c, d, a, b, x[k + 3], S33, 0xD4EF3085);
			b = HH(b, c, d, a, x[k + 6], S34, 0x4881D05);
			a = HH(a, b, c, d, x[k + 9], S31, 0xD9D4D039);
			d = HH(d, a, b, c, x[k + 12], S32, 0xE6DB99E5);
			c = HH(c, d, a, b, x[k + 15], S33, 0x1FA27CF8);
			b = HH(b, c, d, a, x[k + 2], S34, 0xC4AC5665);
			a = II(a, b, c, d, x[k + 0], S41, 0xF4292244);
			d = II(d, a, b, c, x[k + 7], S42, 0x432AFF97);
			c = II(c, d, a, b, x[k + 14], S43, 0xAB9423A7);
			b = II(b, c, d, a, x[k + 5], S44, 0xFC93A039);
			a = II(a, b, c, d, x[k + 12], S41, 0x655B59C3);
			d = II(d, a, b, c, x[k + 3], S42, 0x8F0CCC92);
			c = II(c, d, a, b, x[k + 10], S43, 0xFFEFF47D);
			b = II(b, c, d, a, x[k + 1], S44, 0x85845DD1);
			a = II(a, b, c, d, x[k + 8], S41, 0x6FA87E4F);
			d = II(d, a, b, c, x[k + 15], S42, 0xFE2CE6E0);
			c = II(c, d, a, b, x[k + 6], S43, 0xA3014314);
			b = II(b, c, d, a, x[k + 13], S44, 0x4E0811A1);
			a = II(a, b, c, d, x[k + 4], S41, 0xF7537E82);
			d = II(d, a, b, c, x[k + 11], S42, 0xBD3AF235);
			c = II(c, d, a, b, x[k + 2], S43, 0x2AD7D2BB);
			b = II(b, c, d, a, x[k + 9], S44, 0xEB86D391);
			a = AddUnsigned(a, AA);
			b = AddUnsigned(b, BB);
			c = AddUnsigned(c, CC);
			d = AddUnsigned(d, DD);
		}

		var temp = WordToHex(a) + WordToHex(b) + WordToHex(c) + WordToHex(d);

		return temp.toLowerCase();
	}

	window.utf8_encode = function (str_data) {
		str_data = str_data.replace(/\r\n/g, "\n");
		var utftext = "";
		for (var n = 0; n < str_data.length; n++) {
			var c = str_data.charCodeAt(n);
			if (c < 128) {
				utftext += String.fromCharCode(c);
			} else if ((c > 127) && (c < 2048)) {
				utftext += String.fromCharCode((c >> 6) | 192);
				utftext += String.fromCharCode((c & 63) | 128);
			} else {
				utftext += String.fromCharCode((c >> 12) | 224);
				utftext += String.fromCharCode(((c >> 6) & 63) | 128);
				utftext += String.fromCharCode((c & 63) | 128);
			}
		}
		return utftext;
	}

	window.LDB = {};

	$.ajax({
		async: false,
		url: '/system/ajax.php',
		dataType: 'json',
		method: 'POST',
		data: {action: 'get_phrase_translations'},
		success: function (response) {
			if (response.status == 'OK') {
				LDB = response.data;
			} else {
				console.log(response.description);
			}
		}
	})

	window.L = function (str) {
		if (typeof (LDB[md5(str)]) !== 'undefined') {
			return LDB[md5(str)];
		} else {
			$.ajax({
				async: false,
				url: '/system/ajax.php',
				dataType: 'json',
				method: 'POST',
				data: {action: 'auto_translation', text: str, key: md5(str)},
				success: function (response) {
					if (response.status == 'OK') {
						LDB[response.key] = response.data;
					} else {
						console.log(response.description);
					}
				}
			})
			if (typeof (LDB[md5(str)]) !== 'undefined') {
				return LDB[md5(str)];
			} else {
				return str;
			}
		}
	}

	window.tobiz = {};
	window.tobiz.cookie = cookie;
	window.tobiz.url = url;






	setInterval(function(){
		$({temporary_x: -151, temporary_y: 0}).animate({temporary_x: 500, temporary_y: 0}, {
			duration: 1000,
			step: function() {
				var position = Math.round(this.temporary_x) + "px " + Math.round(this.temporary_y) + "px";
				$("#offer .inner .obtn").css("background-position",  position);
				$("#key_features .inner .obtn").css("background-position",  position);
				$("#templates div.right_col div.template-preview-wrapper a.btn").css("background-position",  position);
				$("#template_install").css("background-position",  position);


			}
		});
	},2000);





	$('#off20_close').click(function(){
		$('#off20').addClass('closed');

		window.tobiz.cookie.set('off20','1');
	})



	if($('#reports').length>0){
		// простой слайдер на главной
		$('.reports_nav .before').click(function(){
			$('.reports_wrapper').stop(true, true);
			var slide = $('.reports_wrapper').children('.report');
			var w = slide.eq(0).width();
			$('.reports_wrapper').css({left: '-='+w});
			$('.reports_wrapper').prepend(slide.eq(slide.length-1))
			$('.reports_wrapper').animate({left: '0'});
		})
		$('.reports_nav .after, .reports_wrapper .report').click(function(){
			$('.reports_wrapper').stop(true, true);
			var slide = $('.reports_wrapper').children('.report');
			var w = slide.eq(0).width();
			$('.reports_wrapper').css({left: '+='+w});
			$('.reports_wrapper').animate({left: '-='+w});
			$('.reports_wrapper').append(slide.eq(0))
		})
	}


	$('#header .auth').click(function(){

		$('#header .drop-menu').toggle();
	})

	$(document).click( function(e){
		if ( $(e.target).closest('.auth, .drop-menu').length ) {
			// клик внутри элемента 
			return;
		}
		// клик снаружи элемента 
		$('#header .drop-menu').hide();
	});


	$('#support_sections li a, #template_sections li a, #header .drop-menu a, #config_sections li a').hover(function(){
		$(this).parent().addClass('hover');
	},function(){
		$(this).parent().removeClass('hover');
	})







	var inviter = tobiz.url.getParam('inviter');
	if(inviter){
		tobiz.cookie.set('inviter' ,inviter);
		$.ajax({dataType: "json", type: "POST", url: "/system/affiliate_program_click.php", data: {inviter: inviter }}).done(function(data) {
			if (data.status == 'OK') {
				console.log(data.status)
			} else {
				console.log(data.status)
			}
		});

	}
	var key350 = tobiz.url.getParam('key350');
	if(key350){
		tobiz.cookie.set('key350' ,1);
	}
	var utm_source = tobiz.url.getParam('utm_source');
	if(utm_source){
		tobiz.cookie.set('utm_source' ,utm_source);
	}
	var banner = tobiz.url.getParam('banner');
	if(banner){
		tobiz.cookie.set('banner_id', banner);
	}
	var banner_id = tobiz.url.getParam('banner_id');
	if(banner_id){
		tobiz.cookie.set('banner_id', banner_id);
	}


//    var ad_id = tobiz.url.getParam('ad_id');
//    if(ad_id){
//        tobiz.cookie.set('ad_id', ad_id);
//    }

	var campaign_id = tobiz.url.getParam('campaign_id');
	if(campaign_id){
		tobiz.cookie.set('campaign_id', campaign_id);
	}

	var keyword = tobiz.url.getParam('keyword');
	if(keyword){
		tobiz.cookie.set('keyword', keyword);
	}

	var source = tobiz.url.getParam('source');
	if(source){
		tobiz.cookie.set('source', source);
	}


	var rk_pay = tobiz.url.getParam('rk_pay');
	if(rk_pay=="success"){
		window.modal.getModal('Успех', 'Оплата прошла успешно');
		//alert('Оплата завершена!');
		window.location.href='/projects/';
	}












	if($('#action_popup_bg')){
		setTimeout(function(){
			$('#action_popup').css({left: "-10000px"});
			$('#action_popup_bg').show();
			$('#action_popup').animate({left: "50%"},700);
		},1000);

	}

	$('#action_popup_close').click(function(){
		$('#action_popup_bg').hide();

	})
	$('#action_popup').click(function(e){
		e.stopPropagation();

	})
	$('#action_popup_bg').click(function(){
		$('#action_popup_bg').hide();

	})



	if($('.text_scroller').length){
		$('.text_scroller').each(function(){
			var a = $(this).children('a');
			var span = $(this).children('span');
			a.hide();
			a.eq(0).show();
			a.eq(a.length-1).show();

			if((span.text()*1)>12){
			 a.eq(0).after(' ...');
			}
			if((span.text()*1)<((a.eq(a.length-1).text()*1)-11)){

			a.eq(a.length-1).before('... ');
			}

			span.prev().show();
			span.prev().prev().show();
			span.prev().prev().prev().show();
			span.prev().prev().prev().prev().show();
			span.prev().prev().prev().prev().prev().show();
			span.prev().prev().prev().prev().prev().prev().show();
			span.prev().prev().prev().prev().prev().prev().prev().show();
			span.prev().prev().prev().prev().prev().prev().prev().prev().show();
			span.prev().prev().prev().prev().prev().prev().prev().prev().prev().show();
			span.prev().prev().prev().prev().prev().prev().prev().prev().prev().prev().show();

			span.next().show();
			span.next().next().show();
			span.next().next().next().show();
			span.next().next().next().next().show();
			span.next().next().next().next().next().show();
			span.next().next().next().next().next().next().show();
			span.next().next().next().next().next().next().next().show();
			span.next().next().next().next().next().next().next().next().show();
			span.next().next().next().next().next().next().next().next().next().show();
			span.next().next().next().next().next().next().next().next().next().next().show();
		})
	}




	if($('#main_menu li.readme').length){
		setInterval(function(){
			$('#main_menu li.readme').toggleClass('blink');
		},500);
	}

	if($('#please_stay_new').length){

		var state = 0;
//        $('#please_stay').click(function(e){
//            e.stopPropagation();
//        })
//        $('#please_stay_bg').click(function(){
//
//            $('#please_stay_bg').hide();
//
//        })
//
//        $('#please_stay_close').click(function(){
//            $('#please_stay_bg').hide();
//
//        })

		$('html').mouseleave(function(e){

			if(state==1) return;

//            $('#please_stay_bg').show();
//            $('#please_stay').css({top: "-10000px"});
//            $('#please_stay_bg').show();
//            $('#please_stay').animate({top: "50%"},500, function(){
				window.modal.getModal('', `<div class="special_offer">
					<div class="special_offer_image" style="background-image: url(/templates/new/i/personal_offers/free.jpg)"></div>
					<div class="special_offer_description">
						<div class="special_offer_text">Создайте сайт на конструкторе прямо сейчас, и мы подарим вам 350 руб. на счет</div>
						<a href="/registration/?key350=true" class="special_offer_btn">Создать сайт</a>
					</div>
				</div>`, 'action specialOffer');
				state=1;

				$.ajax({dataType: "json", type: "POST", url: "/system/please_stay_setsession.php", data: {action: "please_stay", pageId: window.page_id }}).done(function(data) {
					if (data.status == 'OK') {
						console.log(data.status)
					} else {
						console.log(data.status)
					}
				});





			})

//        })



	}


	$('body').on('click', '#switch_edit', function(){

		if($('body').attr('contenteditable')=='true'){
			$('body').removeAttr('contenteditable');
			$('#switch_edit').css({background:'red'});

		}else{
			$('#switch_edit').css({background:'green'});
			$('body').attr('contenteditable', 'true');

		}


	})

	$('body').on('click', '.confirm', function(){

		if(!confirm('Вы уверены?')){
			return false;
		}



	})





	window.showFastReg = function(text){
		$('#fast_reg').html('<form action="\/registration\/" method="POST">\n\
				<div id="fast_reg_descr">'+text+'</div><input type="text" required="required" name="new_user_email" value="" placeholder="Введите E-Mail" \/>\n\
				<input type="hidden"  name="new_user_agreement" value="confirm" checked="checked" \/>\n\
				<button>Начать<\/button>\n\
			<\/form>\n\
			<div id="fast_reg_soc_lable">Или войдите через социальную сеть:<\/div>\n\
			<script src="\/\/ulogin.ru\/js\/ulogin.js"><\/script>\n\
			<div id="uLogin" data-ulogin="display=panel;theme=flat;fields=first_name,last_name,email;providers=vkontakte,google,yandex,mailru,facebook;redirect_uri=https%3A%2F%2Ftobiz.net%2Fulogin%2F"><\/div>');
		$('#wrapper, #footer').addClass('blur');
		$('#fast_reg_wrapper').fadeIn();


	}


	$('#fast_reg').click(function(e){
		e.stopPropagation();

	})

	$('#fast_reg_wrapper').click(function(e){
		$(this).hide();
		$('#wrapper, #footer').removeClass('blur');

	})


	$('.mtoogler').click(function(){
		$('#header ul.menu').toggle();
	})

	$('#tarifs .tarif .title').click(function(){
		$('#tarifs .tarif.open').removeClass('open').addClass('close');
		$(this).parent().toggleClass('open');
		$(this).parent().toggleClass('close');
	})



	$('#support .sections_toogler, #location .sections_toogler, #templates .sections_toogler, #config .sections_toogler, #akcii .sections_toogler').click(function(){


		$('#support #support_sections, #location #support_sections, #templates #template_sections, #config #config_sections, #akcii #akcii_sections').toggle();
	})



	window.punycode = new function Punycode() {
		// This object converts to and from puny-code used in IDN
		//
		// punycode.ToASCII ( domain )
		// 
		// Returns a puny coded representation of "domain".
		// It only converts the part of the domain name that
		// has non ASCII characters. I.e. it dosent matter if
		// you call it with a domain that already is in ASCII.
		//
		// punycode.ToUnicode (domain)
		//
		// Converts a puny-coded domain name to unicode.
		// It only converts the puny-coded parts of the domain name.
		// I.e. it dosent matter if you call it on a string
		// that already has been converted to unicode.
		//
		//
		this.utf16 = {
			// The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.
			decode: function (input) {
				var output = [], i = 0, len = input.length, value, extra;
				while (i < len) {
					value = input.charCodeAt(i++);
					if ((value & 0xF800) === 0xD800) {
						extra = input.charCodeAt(i++);
						if (((value & 0xFC00) !== 0xD800) || ((extra & 0xFC00) !== 0xDC00)) {
							throw new RangeError("UTF-16(decode): Illegal UTF-16 sequence");
						}
						value = ((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000;
					}
					output.push(value);
				}
				return output;
			},
			encode: function (input) {
				var output = [], i = 0, len = input.length, value;
				while (i < len) {
					value = input[i++];
					if ((value & 0xF800) === 0xD800) {
						throw new RangeError("UTF-16(encode): Illegal UTF-16 value");
					}
					if (value > 0xFFFF) {
						value -= 0x10000;
						output.push(String.fromCharCode(((value >>> 10) & 0x3FF) | 0xD800));
						value = 0xDC00 | (value & 0x3FF);
					}
					output.push(String.fromCharCode(value));
				}
				return output.join("");
			}
		}

		//Default parameters
		var initial_n = 0x80;
		var initial_bias = 72;
		var delimiter = "\x2D";
		var base = 36;
		var damp = 700;
		var tmin = 1;
		var tmax = 26;
		var skew = 38;
		var maxint = 0x7FFFFFFF;

		// decode_digit(cp) returns the numeric value of a basic code 
		// point (for use in representing integers) in the range 0 to
		// base-1, or base if cp is does not represent a value.

		function decode_digit(cp) {
			return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;
		}

		// encode_digit(d,flag) returns the basic code point whose value
		// (when used for representing integers) is d, which needs to be in
		// the range 0 to base-1. The lowercase form is used unless flag is
		// nonzero, in which case the uppercase form is used. The behavior
		// is undefined if flag is nonzero and digit d has no uppercase form. 

		function encode_digit(d, flag) {
			return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);
			//  0..25 map to ASCII a..z or A..Z 
			// 26..35 map to ASCII 0..9
		}
		//** Bias adaptation function **
		function adapt(delta, numpoints, firsttime) {
			var k;
			delta = firsttime ? Math.floor(delta / damp) : (delta >> 1);
			delta += Math.floor(delta / numpoints);

			for (k = 0; delta > (((base - tmin) * tmax) >> 1); k += base) {
				delta = Math.floor(delta / (base - tmin));
			}
			return Math.floor(k + (base - tmin + 1) * delta / (delta + skew));
		}

		// encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,
		// uppercase if flag is nonzero, and returns the resulting code point.
		// The code point is unchanged if it is caseless.
		// The behavior is undefined if bcp is not a basic code point.

		function encode_basic(bcp, flag) {
			bcp -= (bcp - 97 < 26) << 5;
			return bcp + ((!flag && (bcp - 65 < 26)) << 5);
		}

		// Main decode
		this.decode = function (input, preserveCase) {
			// Dont use utf16
			var output = [];
			var case_flags = [];
			var input_length = input.length;

			var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;

			// Initialize the state: 

			n = initial_n;
			i = 0;
			bias = initial_bias;

			// Handle the basic code points: Let basic be the number of input code 
			// points before the last delimiter, or 0 if there is none, then
			// copy the first basic code points to the output.

			basic = input.lastIndexOf(delimiter);
			if (basic < 0)
				basic = 0;

			for (j = 0; j < basic; ++j) {
				if (preserveCase)
					case_flags[output.length] = (input.charCodeAt(j) - 65 < 26);
				if (input.charCodeAt(j) >= 0x80) {
					throw new RangeError("Illegal input >= 0x80");
				}
				output.push(input.charCodeAt(j));
			}

			// Main decoding loop: Start just after the last delimiter if any
			// basic code points were copied; start at the beginning otherwise. 

			for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {

				// ic is the index of the next character to be consumed,

				// Decode a generalized variable-length integer into delta,
				// which gets added to i. The overflow checking is easier
				// if we increase i as we go, then subtract off its starting 
				// value at the end to obtain delta.
				for (oldi = i, w = 1, k = base; ; k += base) {
					if (ic >= input_length) {
						throw RangeError("punycode_bad_input(1)");
					}
					digit = decode_digit(input.charCodeAt(ic++));

					if (digit >= base) {
						throw RangeError("punycode_bad_input(2)");
					}
					if (digit > Math.floor((maxint - i) / w)) {
						throw RangeError("punycode_overflow(1)");
					}
					i += digit * w;
					t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;
					if (digit < t) {
						break;
					}
					if (w > Math.floor(maxint / (base - t))) {
						throw RangeError("punycode_overflow(2)");
					}
					w *= (base - t);
				}

				out = output.length + 1;
				bias = adapt(i - oldi, out, oldi === 0);

				// i was supposed to wrap around from out to 0,
				// incrementing n each time, so we'll fix that now: 
				if (Math.floor(i / out) > maxint - n) {
					throw RangeError("punycode_overflow(3)");
				}
				n += Math.floor(i / out);
				i %= out;

				// Insert n at position i of the output: 
				// Case of last character determines uppercase flag: 
				if (preserveCase) {
					case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);
				}

				output.splice(i, 0, n);
				i++;
			}
			if (preserveCase) {
				for (i = 0, len = output.length; i < len; i++) {
					if (case_flags[i]) {
						output[i] = (String.fromCharCode(output[i]).toUpperCase()).charCodeAt(0);
					}
				}
			}
			return this.utf16.encode(output);
		};

		//** Main encode function **

		this.encode = function (input, preserveCase) {
			//** Bias adaptation function **

			var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;

			if (preserveCase) {
				// Preserve case, step1 of 2: Get a list of the unaltered string
				case_flags = this.utf16.decode(input);
			}
			// Converts the input in UTF-16 to Unicode
			input = this.utf16.decode(input.toLowerCase());

			var input_length = input.length; // Cache the length

			if (preserveCase) {
				// Preserve case, step2 of 2: Modify the list to true/false
				for (j = 0; j < input_length; j++) {
					case_flags[j] = input[j] != case_flags[j];
				}
			}

			var output = [];


			// Initialize the state: 
			n = initial_n;
			delta = 0;
			bias = initial_bias;

			// Handle the basic code points: 
			for (j = 0; j < input_length; ++j) {
				if (input[j] < 0x80) {
					output.push(
							String.fromCharCode(
									case_flags ? encode_basic(input[j], case_flags[j]) : input[j]
									)
							);
				}
			}

			h = b = output.length;

			// h is the number of code points that have been handled, b is the
			// number of basic code points 

			if (b > 0)
				output.push(delimiter);

			// Main encoding loop: 
			//
			while (h < input_length) {
				// All non-basic code points < n have been
				// handled already. Find the next larger one: 

				for (m = maxint, j = 0; j < input_length; ++j) {
					ijv = input[j];
					if (ijv >= n && ijv < m)
						m = ijv;
				}

				// Increase delta enough to advance the decoder's
				// <n,i> state to <m,0>, but guard against overflow: 

				if (m - n > Math.floor((maxint - delta) / (h + 1))) {
					throw RangeError("punycode_overflow (1)");
				}
				delta += (m - n) * (h + 1);
				n = m;

				for (j = 0; j < input_length; ++j) {
					ijv = input[j];

					if (ijv < n) {
						if (++delta > maxint)
							return Error("punycode_overflow(2)");
					}

					if (ijv == n) {
						// Represent delta as a generalized variable-length integer: 
						for (q = delta, k = base; ; k += base) {
							t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;
							if (q < t)
								break;
							output.push(String.fromCharCode(encode_digit(t + (q - t) % (base - t), 0)));
							q = Math.floor((q - t) / (base - t));
						}
						output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));
						bias = adapt(delta, h + 1, h == b);
						delta = 0;
						++h;
					}
				}

				++delta, ++n;
			}
			return output.join("");
		}

		this.ToASCII = function (domain) {
			var domain_array = domain.split(".");
			var out = [];
			for (var i = 0; i < domain_array.length; ++i) {
				var s = domain_array[i];
				out.push(
						s.match(/[^A-Za-z0-9-]/) ?
						"xn--" + punycode.encode(s) :
						s
						);
			}
			return out.join(".");
		}
		this.ToUnicode = function (domain) {
			var domain_array = domain.split(".");
			var out = [];
			for (var i = 0; i < domain_array.length; ++i) {
				var s = domain_array[i];
				out.push(
						s.match(/^xn--/) ?
						punycode.decode(s.slice(4)) :
						s
				);
			}
			return out.join(".");
		}
	}();
	
	
	
	
	
	$('body').on('click', '#float-modal-wrapper .modal-close', function() {
		$('#float-modal-wrapper').addClass('hidden');
	});
	
	
	function resizeiFramesInSupportContents() {
		
		var $iframes = $('body').find('iframe[src*="youtube.com"], iframe[src*="youtu.be"], iframe[src*="vk.com"], iframe[src*="rutube.ru"], iframe[src*="viemo.com"]');
		
//		console.log($iframes);
		
		$iframes.each(function() {			
			$(this).css('box-sizing', 'border-box');
			$(this).css('width', '100%');
			
			var width = $(this).outerWidth();
			var height = width / 16 * 9;
			
			$(this).css('height', height);
		});
		
	}
	
	resizeiFramesInSupportContents();
	
	
	
	$('#message').on('input', function() {
        var messageText = $(this).val().toLowerCase();

        if (messageText.includes('колесо фортуны')) {
            window.location.href = 'https://tobiz.net/fortune/';
        }
    });

})
